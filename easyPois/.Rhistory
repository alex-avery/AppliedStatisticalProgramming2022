library(devtools)
logLike <- function(y, lambda){
#getting the number of observations
n <- length(y)
#first summation
factsum <- sum(log(factorial(y)))
#second summation
lambdasum <- log(lambda) * sum(y)
#loglikelihood function
LL <- - (n * lambda) - factsum - lambdasum
return(LL)
}
y <- (4,3,2,4,5,6)
y <- c(4,3,2,4,5,6)
logLik(y, 0.5)
logLik(y = y, lambda = 0.5)
logLik(y = y, lambda = 4)
rm(logLike)
logLik <- function(y, lambda){
#getting the number of observations
n <- length(y)
#first summation
factsum <- sum(log(factorial(y)))
#second summation
lambdasum <- log(lambda) * sum(y)
#loglikelihood function
LL <- - (n * lambda) - factsum - lambdasum
return(LL)
}
logLik(y, 5)
use_r("logLik")
use_test("logLik")
use_r("mle")
mle <- function(y){
numerator <- sum(y)
denominator <- length(y)
MLE <- numerator / denominator
return(MLE)
}
use_r("standardError")
use_r("PoisMLEClass")
use_r("estimatePois")
load_all()
roxygen2::update_collate("/Users/alexcisco/Library/Mobile Documents/com~apple~CloudDocs/Documents/WUSTL/Courses/Applied Statistical Programming/AppliedStatisticalProgramming2022/easyPois.Rproj")
roxygen2::update_collate("/Users/alexcisco/Library/Mobile Documents/com~apple~CloudDocs/Documents/WUSTL/Courses/Applied Statistical Programming/AppliedStatisticalProgramming2022")
load_all()
rm(list = c("logLik", "mle"))
load_all()
check()
use_mit_license()
y <- c(1:10)
y <- (1:10)
load_all()
check()
load_all()
check()
load_all()
check()
load_all()
check()
?methods
?methods::callNextMethod
?methods::validObject
load_all()
check()
install()
